オンラインガチャサイト - TUNAGATYA - 詳細要件・デザイン設計書
1. 詳細な機能要件
1.1. ユーザー機能
1.1.1. アカウント管理
●	新規登録:
○	必須項目: メールアドレス、パスワード（8文字以上、英数字記号混合）、ユーザー名
○	任意項目: 生年月日、性別、電話番号
○	認証: メールアドレスによる認証（確認メール送信、URLクリックで本登録完了）
○	SNS連携: Google, X (旧Twitter), LINEなどによる簡易登録・ログイン機能
○	利用規約・プライバシーポリシーへの同意: チェックボックス必須
●	ログイン/ログアウト:
○	メールアドレスとパスワードによるログイン
○	SNS連携ログイン
○	「パスワードを忘れた場合」機能（登録メールアドレスへのリセットURL送信）
○	セッション管理（一定時間経過で自動ログアウト、または「ログイン状態を保持する」オプション）
●	プロフィール編集:
○	ユーザー名、メールアドレス、パスワード、登録情報の変更
○	変更時のパスワード再入力または本人確認
●	退会:
○	退会時の確認ダイアログ表示
○	退会後のデータ保持ポリシーの明示
1.1.2. ポイント/チャージ機能
●	ポイント購入:
○	チャージ金額選択: 1,000円、3,000円、5,000円、10,000円、30,000円、50,000円など定額選択に加え、任意金額入力（例: 1,000円〜100,000円）
○	決済方法: クレジットカード（Visa, Mastercard, JCB, Amexなど）、コンビニ決済、銀行振込、電子マネー（PayPay, LINE Payなど）
○	購入確認: 最終確認画面での金額、決済方法、手数料の表示
○	購入完了通知: メールまたはサイト内通知
●	ポイント履歴:
○	チャージ日時、金額、決済方法
○	オリパ購入日時、消費ポイント、オリパ名
○	アイテムポイント変換日時、獲得ポイント、アイテム名
○	履歴のフィルタリング（期間、種別）
1.1.3. オリパ購入・開封
●	オリパ一覧表示:
○	表示項目: オリパ名、価格（ポイント）、残り口数、サムネイル画像、カテゴリ、販売期間
○	フィルタリング: カテゴリ（TCG名、ジャンルなど）、価格帯、残り口数、新着順、人気順
○	検索: オリパ名によるキーワード検索
○	ステータス表示: 「販売中」「販売終了」「残りわずか」など
●	オリパ詳細表示:
○	基本情報: オリパ名、価格、総口数、残り口数、販売期間、説明文
○	封入内容: 当たりカード（画像、レアリティ、枚数）、その他カード（画像、レアリティ、枚数）のリスト
○	排出確率: 各レアリティ、または特定の当たりカードの排出確率を明示
○	購入オプション: 単発購入ボタン、複数口購入（10連、30連など）ボタン
○	購入確認: 購入口数、消費ポイントの最終確認ダイアログ
●	購入後の即時開封演出:
○	演出: 購入後、オリパが開封されるアニメーション（例: パックが破れる、カードが飛び出すなど）
○	結果表示: 開封されたカードが1枚ずつ（または複数枚同時に）表示され、レアリティに応じてエフェクトを変化させる
○	獲得アイテム表示: 開封結果として獲得したアイテムのリスト表示
●	開封履歴:
○	開封日時、オリパ名、購入口数
○	獲得アイテムリスト（画像、レアリティ）
○	各アイテムの「キープ」または「ポイント変換」の現在の状態
1.1.4. 獲得アイテム管理
●	獲得アイテム一覧:
○	表示項目: アイテム画像、アイテム名、レアリティ、獲得日時、状態（キープ中、ポイント変換済み、発送済みなど）
○	フィルタリング: レアリティ、カテゴリ、状態
○	並べ替え: 獲得日時、レアリティ、名前順
●	アイテム詳細:
○	アイテムの拡大画像、詳細説明、レアリティ、獲得オリパ名
○	「キープする」ボタン: 発送申請リストに追加
○	「ポイントに変換する」ボタン: 確認ダイアログ表示後、指定されたポイントに変換し、アイテムリストから削除
1.1.5. 発送申請
●	発送申請リスト:
○	キープ済みのアイテム一覧表示
○	発送したいアイテムの選択（チェックボックス）
○	選択したアイテムの合計枚数、合計重量（想定）、合計送料の概算表示
●	発送先情報入力・管理:
○	氏名、郵便番号、住所、電話番号の入力フォーム
○	複数配送先の登録・選択機能
●	送料計算・支払い:
○	選択されたアイテムの重量やサイズに基づいた正確な送料計算
○	送料の支払い方法選択（ポイント払い、または別途クレジットカード決済など）
○	最終確認画面での送料、合計金額、配送先情報の表示
●	発送状況の確認:
○	申請日時、発送ステータス（申請中、梱包中、発送済み、配達完了など）
○	追跡番号の表示（配送業者へのリンク）
○	発送済みアイテムのリスト
1.1.6. お知らせ・通知
●	サイト内お知らせ:
○	新着オリパ、キャンペーン、メンテナンス情報などを一覧表示
○	既読/未読管理
●	プッシュ通知/メール通知:
○	新着オリパの通知
○	発送完了通知
○	ポイントチャージ完了通知
○	ユーザー設定で通知のON/OFF切り替え
1.1.7. お問い合わせ
●	フォーム形式: 氏名、メールアドレス、件名、お問い合わせ内容
●	カテゴリ選択: 決済、発送、不具合、その他など
●	FAQ: よくある質問へのリンク
1.2. 運営管理機能（バックエンド）
1.2.1. オリパ管理
●	オリパ新規作成/編集:
○	オリパ名、説明文、サムネイル画像、販売価格、総口数、販売開始/終了日時
○	封入アイテム設定:
■	アイテム検索・選択機能
■	各アイテムの封入枚数、排出確率（自動計算または手動設定）
■	当たりカード、ハズレカードの区別
■	ポイント変換レート設定
○	ステータス設定（下書き、販売中、販売終了）
●	在庫管理:
○	残り口数の自動更新
○	手動での在庫調整機能（緊急時のみ）
●	オリパ複製機能: 既存オリパをテンプレートとして新規作成
1.2.2. アイテム管理
●	アイテムマスター登録/編集:
○	アイテム名、カテゴリ（TCG名、シリーズなど）、レアリティ、画像、詳細説明
○	参考価格（市場価格）設定
○	ポイント変換時のデフォルトレート設定
1.2.3. ユーザー管理
●	ユーザーリスト表示（ユーザー名、メールアドレス、登録日時、最終ログイン日時、ポイント残高）
●	ユーザー詳細情報の閲覧・編集
●	ポイントの手動付与・削除機能（履歴記録必須）
●	アカウントの利用停止/再開
1.2.4. 注文・発送管理
●	オリパ購入履歴: ユーザー名、オリパ名、購入日時、口数、消費ポイント、獲得アイテム
●	発送申請一覧: 申請日時、ユーザー名、発送先、選択アイテムリスト、送料、支払い状況、発送ステータス
●	発送処理:
○	発送ステータスの更新（申請中 → 梱包中 → 発送済み → 配達完了）
○	追跡番号の入力
○	発送完了通知の自動送信
●	発送履歴: 過去の発送完了リスト
1.2.5. ポイント管理
●	全ユーザーのポイントチャージ履歴
●	全ユーザーのポイント消費履歴
●	ポイント残高ランキング（運営用）
1.2.6. 売上・統計レポート
●	日次/週次/月次/年次の売上レポート
●	オリパ別売上ランキング
●	ユーザー別購入額ランキング
●	獲得アイテムのカテゴリ別/レアリティ別統計
1.2.7. お知らせ・キャンペーン管理
●	お知らせの作成・公開・非公開設定
●	キャンペーン情報の作成・公開・非公開設定、期間設定
1.2.8. システム設定
●	送料設定（地域別、重量別など）
●	決済手数料設定
●	各種メールテンプレート編集
2. UI/UXデザイン
2.1. 全体デザインコンセプト
●	モダンでクリーンなデザイン: シンプルで直感的なインターフェース
●	視覚的な魅力: TCGやコレクションアイテムの魅力が伝わるような画像中心のデザイン
●	レスポンシブデザイン: PC、タブレット、スマートフォンなど、あらゆるデバイスで最適に表示・操作可能
●	ブランドカラー: サイトのテーマカラーを設定し、統一感を出す
●	アニメーション: オリパ開封時や重要なアクション時に、ユーザーエンゲージメントを高めるアニメーションを導入
2.2. サイト構成と主要ページのUI/UX
2.2.1. トップページ
●	ヒーローセクション:
○	サイトのコンセプトを伝えるキャッチコピー
○	主要な新着オリパやキャンペーンを大きく表示するカルーセルまたはバナー
●	新着オリパ/人気オリパセクション:
○	カード形式でオリパのサムネイル、名称、価格、残り口数を表示
○	左右スクロール可能なカルーセルまたはグリッド表示
●	遊び方ガイド:
○	オリパ購入から発送までの簡単なステップをアイコンと短いテキストで説明
●	お知らせ/キャンペーン情報:
○	最新の情報をカード形式で表示
●	フッター:
○	各ページへのリンク、SNSリンク、著作権表示、特定商取引法に基づく表記など
2.2.2. オリパ一覧ページ
●	サイドバー/上部フィルタリング:
○	カテゴリ（TCGジャンル）、価格帯（スライダーまたは選択肢）、残り口数（スライダー）、並び替え（新着順、人気順、価格順）
●	検索バー:
○	オリパ名によるキーワード検索
●	オリパカード表示:
○	グリッドレイアウトで、各オリパのカードを表示
○	カードにはオリパのサムネイル、名称、価格、残り口数、簡単な説明を表示
○	「残りわずか」や「NEW」などのバッジ表示
2.2.3. オリパ詳細ページ
●	メインビジュアル:
○	オリパのコンセプトを表現する大きな画像または動画
●	基本情報エリア:
○	オリパ名、価格、総口数、残り口数、販売期間
○	「購入する」ボタン（単発、複数口選択）
●	封入内容/確率エリア:
○	当たりカード、その他封入カードをリスト形式で表示
○	各カードの画像、名称、レアリティ、枚数
○	排出確率のグラフ表示（円グラフや棒グラフなど）
○	封入されているカードの画像ギャラリー
●	説明文エリア:
○	オリパのコンセプト、狙い、注意事項などを詳細に記載
2.2.4. マイページ
●	ダッシュボード形式:
○	ポイント残高、獲得アイテム数、発送待ちアイテム数などのサマリー表示
○	「ポイントチャージ」「アイテム一覧」「発送申請」など主要機能へのショートカットボタン
●	獲得アイテム一覧:
○	アイテムカードのグリッド表示
○	各カードに「キープ」「ポイント変換」のボタン
●	開封履歴/発送申請履歴:
○	タブ切り替えまたは別セクションで表示
○	リスト形式で詳細情報を表示
2.2.5. 開封演出
●	没入感のあるデザイン: 全画面表示または大きなモーダルウィンドウ
●	アニメーション:
○	オリパパックが画面中央に現れ、開封されるアニメーション
○	カードが1枚ずつ（または複数枚）現れるアニメーション
○	高レアリティのカードが出た際には、特別なエフェクトやサウンド
●	結果表示:
○	開封されたカードが一覧表示され、ユーザーが「キープ」または「ポイント変換」を選択できるUI
2.3. UIコンポーネント
●	ボタン: プライマリ、セカンダリ、危険色など状態に応じたデザイン、ホバーエフェクト
●	フォーム要素: 入力フィールド、ドロップダウン、チェックボックス、ラジオボタン
●	モーダル/ダイアログ: 確認、エラー、完了メッセージ表示
●	トースト通知: 簡易的な成功/失敗メッセージ
●	ローディングインジケーター: データ取得中や処理中の表示
●	カルーセル/スライダー: 画像ギャラリーや特集コンテンツ表示
●	タブ/アコーディオン: コンテンツの整理
2.4. ナビゲーション
●	グローバルヘッダー:
○	ロゴ、主要メニュー（オリパ一覧、マイページ、ポイントチャージ、お知らせ、お問い合わせ）
○	ログイン/登録ボタン、ユーザーアイコン（ログイン後）
○	ポイント残高表示（ログイン後）
●	フッター:
○	主要ページへのリンク、SNSリンク、法的表記へのリンク
3. 非機能要件
●	パフォーマンス:
○	ページの読み込み速度: 各ページ3秒以内（理想は1秒以内）
○	オリパ開封演出の滑らかさ: 60fpsを維持
○	APIレスポンスタイム: 各APIリクエスト500ms以内
●	セキュリティ:
○	SSL/TLSによる通信の暗号化
○	クロスサイトスクリプティング (XSS) およびクロスサイトリクエストフォージェリ (CSRF) 対策
○	SQLインジェクション（リレーショナルDB使用時）対策
○	パスワードのハッシュ化とソルト処理
○	不正アクセス監視、BOT対策
○	個人情報保護法、景品表示法などの法的要件遵守
●	スケーラビリティ:
○	急激なアクセス増加やユーザー数増加に対応できるインフラ設計
○	データベースの水平/垂直スケーリング対応
●	信頼性/可用性:
○	システム稼働率99.9%以上
○	定期的なバックアップと災害復旧計画
●	メンテナンス性:
○	クリーンなコードベース、適切なコメント、ドキュメント
○	容易な機能追加、バグ修正
●	アクセシビリティ:
○	WCAG 2.1 AAレベル準拠を目指す（色コントラスト、キーボードナビゲーション、スクリーンリーダー対応など）
●	運用性:
○	ログ監視、エラー通知、パフォーマンス監視ツール導入
○	デプロイプロセスの自動化 (CI/CD)
4. 技術スタックの補足
●	フロントエンド:
○	React.js/Next.js: コンポーネント指向開発、状態管理（React Context APIまたはZustand/Jotai）、ルーティング（Next.jsのファイルベースルーティングまたはReact Router Dom）、データフェッチング（SWR/React Query）
○	Tailwind CSS: ユーティリティファーストのCSSフレームワークによる高速なUI構築
○	アニメーションライブラリ: Framer Motion, React Spring などによる滑らかな開封演出
●	バックエンド:
○	決済API: Stripe Elements (クレジットカード情報の安全な取り扱い)、または国内決済代行サービスのAPI
●	開発ツール:
○	TypeScript: 型安全な開発
○	ESLint/Prettier: コード品質とフォーマットの統一
